# Memory Bank系统指南

## 概述
Memory Bank是一个结构化的项目上下文管理系统，用于维护项目信息、任务跟踪和开发进度。

## 核心文件

### 基础文档
- [memory-bank/projectbrief.md](mdc:memory-bank/projectbrief.md) - 项目概述、目标和技术要求
- [memory-bank/productContext.md](mdc:memory-bank/productContext.md) - 用户群体、使用场景和产品特色
- [memory-bank/techContext.md](mdc:memory-bank/techContext.md) - 技术栈、架构模式和开发环境

### 动态文档
- [memory-bank/activeContext.md](mdc:memory-bank/activeContext.md) - 当前活动状态和关注重点
- [memory-bank/progress.md](mdc:memory-bank/progress.md) - 项目进度和完成状态
- [memory-bank/tasks.md](mdc:memory-bank/tasks.md) - 任务跟踪和待办事项（单一真相来源）

### 指导文档
- [memory-bank/systemPatterns.md](mdc:memory-bank/systemPatterns.md) - 系统架构和设计模式
- [memory-bank/style-guide.md](mdc:memory-bank/style-guide.md) - 代码风格和开发规范

## 开发模式

### VAN模式 (初始化)
- 平台检测和环境验证
- Memory Bank结构创建
- 复杂度级别判断
- 参考：[custom_modes/van_instructions.md](mdc:custom_modes/van_instructions.md)

### PLAN模式 (规划)
- 详细实现计划制定
- 组件识别和依赖分析
- 创意阶段需求标识
- 参考：[custom_modes/plan_instructions.md](mdc:custom_modes/plan_instructions.md)

### CREATIVE模式 (创意设计)
- 架构和算法设计
- UI/UX设计决策
- 技术选型
- 参考：[custom_modes/creative_instructions.md](mdc:custom_modes/creative_instructions.md)

### IMPLEMENT模式 (实现)
- 代码实现
- 测试编写
- 文档更新
- 参考：[custom_modes/implement_instructions.md](mdc:custom_modes/implement_instructions.md)

### REFLECT+ARCHIVE模式 (反思归档)
- 实现回顾和总结
- 文档归档
- 下一阶段准备
- 参考：[custom_modes/reflect_archive_instructions.md](mdc:custom_modes/reflect_archive_instructions.md)

## 使用原则
1. **tasks.md是单一真相来源** - 所有任务状态以此为准
2. **保持文档同步** - 定期更新所有相关文档
3. **遵循开发模式** - 按照VAN→PLAN→CREATIVE→IMPLEMENT→REFLECT+ARCHIVE流程
4. **维护上下文连续性** - 在activeContext.md中记录当前状态
